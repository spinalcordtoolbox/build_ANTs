name: Build ANTs

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'Upstream ANTsX/ANTs commit ref to check out when building'
        required: true
        default: 'b37e8b56e4e518b0f2947f80d0e3701a5ddfe120'

jobs:

  build:
    strategy:
      matrix:
        os: [ windows-2019 ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    # first, rewrite OS names to be safe for github artifacts.
    - name: names
      run: |
        OS="${{ matrix.os }}"
        OS=$(echo "$OS" | sed s/://)
        echo "ARTIFACT=$OS" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        repository: ANTsX/ANTs
        # NB: This commit mirrors the state of the kousu/ANTs repository
        #     at the time of https://github.com/kousu/ANTs/pull/5.
        ref: ${{ github.event.inputs.git_ref || 'b37e8b56e4e518b0f2947f80d0e3701a5ddfe120' }}
    # The step below sets an option inside the cmake file to use the `https` protocol, which addresses:
    # https://github.blog/2021-09-01-improving-git-protocol-security-github/#no-more-unauthenticated-git
    - name: Patch in fix for insecure git:// protocol
      run: |
        perl -pi -e 's/http instead." ON\)/http instead." OFF\)/g' SuperBuild.cmake
    - name: cmake generate
      run: |
        mkdir antsbin
        cd antsbin
        # TODO: check if cmake picks up CMAKE_CXX_FLAGS without being told about it
        # NB: `BUILD_TESTING=OFF` fixes https://github.com/ANTsX/ANTs/issues/1236
        cmake \
         -DBUILD_TESTING=OFF \
         -DBUILD_SHARED_LIBS=OFF \
         -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" \
         -DZLIB_INCLUDE_DIR=D:\lib\zlib \
         -DZLIB_LIBRARY=D:\lib\zlib\libz.dll.a \
         ../
    - name: make
      working-directory: antsbin
      run: |
        ls
        make VERBOSE=1 -j 4
      timeout-minutes: 300
      # for debugging, don't let a crash/timeout here fail the whole build
      # (github CI seems glitchy about giving reliable output about what happened on timeouts)
      continue-on-error: true
    - name: pre-package
      run: |
        mkdir fakeroot/
        cd antsbin/ANTS-build
        make VERBOSE=1 -j 4 DESTDIR="../../fakeroot" install
      continue-on-error: true
    - name: package
      run: |
        # snip out the apps we need for https://github.com/neuropoly/spinalcordtoolbox, since including all of ANTS is too much
        mkdir sct-apps/
        cp antsbin/ANTS-build/Examples/{antsRegistration,antsSliceRegularizedRegistration,antsApplyTransforms,ComposeMultiTransform} sct-apps
        (cd sct-apps; for i in `ls`; do mv $i isct_$i; done)
        cp COPYING.txt sct-apps
        tar -zcvf sct-apps_${{ env.ARTIFACT }}.tar.gz sct-apps/
      continue-on-error: true
    - name: results (DEBUG)
      run: find .
    - name: Upload result
      uses: actions/upload-artifact@v2-preview
      with:
        name: sct-apps_${{ env.ARTIFACT }}
        #path: fakeroot/ # this is 2.3G large in this build
        path: sct-apps_${{ env.ARTIFACT }}.tar.gz

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # name the release with the run_id to allow multiple builds on the same branch/tag
          # https://github.com/actions/create-release/issues/2#issuecomment-613591846
          tag_name: ${{ github.ref }}-${{github.run_id }}
          release_name: Release ${{ github.sha }}
          draft: true
          prerelease: true

      - uses: actions/download-artifact@v1
        with:
          name: sct-apps_windows-2019
        continue-on-error: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sct-apps_windows-2019/sct-apps_windows-2019.tar.gz
          asset_name: sct-apps_windows-2019.tar.gz
          asset_content_type: application/gzip
        continue-on-error: true
